"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print( as.character(b[,i]))
#print(grepl(b[j,i] , b[,i]))
b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i] , b[,i])))
}
}
#if the last 5 are all the length of the sample then all those measures are unique
for(i in b) if(is.numeric(i)) print(sum(i))
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 1000)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print( as.character(b[,i]))
print(grepl(b[j,i] , b[,i]))
#b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i] , b[,i])))
}
}
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 1000)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
print( as.character(b[,i]))
#print(grepl(b[j,i] , b[,i]))
#b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i] , b[,i])))
}
}
?as.Date
?class
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 10)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
print((b[,i]))
#print(grepl(b[j,i] , b[,i]))
#b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i] , b[,i])))
}
}
#if the last 5 are all the length of the sample then all those measures are unique
for(i in b) if(is.numeric(i)) print(sum(i))
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 10)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
print((b[,i][1]))
#print(grepl(b[j,i] , b[,i]))
#b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i] , b[,i])))
}
}
#if the last 5 are all the length of the sample then all those measures are unique
for(i in b) if(is.numeric(i)) print(sum(i))
as.character(b$browser_id)
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 10)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print((b[,i][1]))
#print(grepl(b[j,i] , b[,i]))
b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i] , c(b[,i]))))
}
}
#if the last 5 are all the length of the sample then all those measures are unique
for(i in b) if(is.numeric(i)) print(sum(i))
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 10)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print((b[,i][1]))
prin(c(b[,i]))
#print(grepl(b[j,i] , b[,i]))
b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i] , c(b[,i]))))
}
}
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print((b[,i][1]))
print(c(b[,i]))
#print(grepl(b[j,i] , b[,i]))
#b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i] , c(b[,i]))))
}
}
View(b)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print((b[,i][1]))
print(c(b[,i]))
#print(grepl(b[j,i] , b[,i]))
b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i] , c(b[,i]))))
}
}
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 100)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print((b[,i][1]))
#print(grepl(b[j,i] , b[,i]))
b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i] , c$i)))
}
}
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 100)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print((b[,i][1]))
#print(grepl(b[j,i] , b[,i]))
b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i] , c$noquote(i))))
}
}
?grepl
grepl(d_seslevel$os_id[1], d_seslevel$os_id)
grepl(d_seslevel[1, "os_id"], d_seslevel$os_id)
grepl(d_seslevel[1, os_id], d_seslevel$os_id)
grepl(d_seslevel[1, grep("os_id", colnames(colnames(d_seslevel))) ], d_seslevel$os_id)
grepl(d_seslevel[1, grep("os_id", colnames((d_seslevel))) ], d_seslevel$os_id )
d_seslevel[1, grep("os_id", colnames((d_seslevel))) ]
d_seslevel[1, grep("os_id", colnames((d_seslevel))) ]
d_seslevel[1, grep("os_id", colnames((d_seslevel))) ][1]
d_seslevel[1, grep("os_id", colnames((d_seslevel))) ][[1]
d_seslevel[1, grep("os_id", colnames((d_seslevel))) ][[1]]
d_seslevel[1, grep("os_id", colnames((d_seslevel))) ][[1]]
b <- sample_n(d_seslevel, 100)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print((b[,i][1]))
#print(grepl(b[j,i] , b[,i]))
b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i][[1]] , c[,i])))
}
}
grepl(d_seslevel[1, grep("os_id", colnames((d_seslevel))) ][[1]], d_seslevel$os_id )
grepl(d_seslevel[1, "os_id"][[1]], d_seslevel$os_id )
d_seslevel[1, grep("os_id", colnames((d_seslevel))) ][[1]]
grepl(d_seslevel[1, "os_id"][[1]], d_seslevel$os_id )
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print((b[,i][1]))
#print(grepl(b[j,i] , b[,i]))
b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i][[1]] , c[,i])))
}
}
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 100)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print((b[,i][1]))
#print(grepl(b[j,i] , b[,i]))
b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i][[1]] , b[,i])))
}
}
#if the last 5 are all the length of the sample then all those measures are unique
for(i in b) if(is.numeric(i)) print(sum(i))
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 1000)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print((b[,i][1]))
#print(grepl(b[j,i] , b[,i]))
b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i][[1]] , b[,i])))
}
}
#if the last 5 are all the length of the sample then all those measures are unique
for(i in b) if(is.numeric(i)) print(sum(i))
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 1000)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
print(b[j,i][[1]])
#b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i][[1]] , b[,i])))
}
}
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 1000)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
print(b[j,i][[1]])
print(b[,i])
#b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i][[1]] , b[,i])))
}
}
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 1000)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print(b[j,i][[1]])
print(b[,i])
#b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i][[1]] , b[,i])))
}
}
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 1000)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print(b[j,i][[1]])
print(b[,i][[1]])
#b[j,paste(i,"matches", sep = "_")] <- sum( c(grepl(b[j,i][[1]] , b[,i])))
}
}
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 1000)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print(b[j,i][[1]])
#print(b[,i][[1]])
b[j, paste(i,"matches", sep = "_")] <- sum(grepl(b[j,i][[1]] , b[,i][[1]]))
}
}
#if the last 5 are all the length of the sample then all those measures are unique
for(i in b) if(is.numeric(i)) print(sum(i))
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 1)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print(b[j,i][[1]])
#print(b[,i][[1]])
b[j, paste(i,"matches", sep = "_")] <- sum(grepl(b[j,i][[1]] , b[,i][[1]]))
}
}
#if the last 5 are all the length of the sample then all those measures are unique
for(i in b) if(is.numeric(i)) print(sum(i))
View(b)
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 4)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print(b[j,i][[1]])
#print(b[,i][[1]])
b[j, paste(i,"matches", sep = "_")] <- sum(grepl(b[j,i][[1]] , b[,i][[1]]))
}
}
#if the last 5 are all the length of the sample then all those measures are unique
for(i in b) if(is.numeric(i)) print(sum(i))
#takes a sec, if you want a quick view
b <- sample_n(d_seslevel, 10)
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(b)){
#print(b[j,i][[1]])
#print(b[,i][[1]])
b[j, paste(i,"matches", sep = "_")] <- sum(grepl(b[j,i][[1]] , b[,i][[1]]))
}
}
for(i in c("d_seslevelrowser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(d_seslevel)){
d_seslevel[j,
paste(i,"matches",
sep = "_")] <- sum(grepl(d_seslevel[j,i][[1]],
d_seslevel[,i][[1]]))
}
}
for(i in c("browser_id",
"device_id",
"os_id",
"client_id",
"ip")){
for(j in 1:nrow(d_seslevel)){
d_seslevel[j,
paste(i,"matches",
sep = "_")] <- sum(grepl(d_seslevel[j,i][[1]],
d_seslevel[,i][[1]]))
}
}
viz <- read.csv("fy18mardec.csv")
setwd("~/Documents/one-offs/John's FY2018Dec Viz")
viz <- read.csv("fy18mardec.csv")
getwd()
viz <- read.csv("fy18marjan.csv")
goals <- read.csv("FY18goals.csv")
viz <- viz %>% left_join(goals)
viz$date <- paste(viz$date, "-01", sep = "")
viz$date <- as.Date(viz$date, format = "%Y-%m-%d")
viz$FY18goal <- gsub(",", "", viz$FY18goal)
viz$FY18goal <- as.numeric(viz$FY18goal)
viz <-  spread(viz, date, downloads)
colnames(viz)[2] <- "2018-07-01"
viz <- gather(viz, date, downloads, 2:ncol(viz))
viz$date <- as.Date(viz$date, format = "%Y-%m-%d")
viz <- viz %>% group_by(show) %>% arrange(show, date)
viz$proj_flag <- ifelse(viz$date == as.Date("2018-07-01"), 1, 0)
viz$is_high <- factor(ifelse(viz$show %in% c("Radiolab", "Freakonomics Radio"),
"Radiolab - Freakonomic", "Other"),
levels = c("Radiolab - Freakonomic", "Other"))
vizra <- viz
vizra <- vizra %>% left_join(vizra %>%
filter(date != as.Date("2018-07-01")) %>%
group_by(show) %>%
mutate(ra = cumsum(downloads) / row_number()))
vizra$ra <- ifelse(is.na(vizra$ra), vizra$downloads, vizra$ra)
ggplot(data = vizra %>% filter(proj_flag !=1),
aes(x = date,
y = ra)) +
labs(title = "WNYC Studios Shows. Progress Through Dec 2017 and FY18 Goal Comparison",
y = "Monthly Rolling Average") +
geom_point(aes(color = show),
size = 1) +
geom_point(data = vizra %>%
filter(proj_flag == 1),
aes(x = date,
y = ra,
color = show),
size = 1) +
geom_line(aes(group = show,
color = show)) +
stat_smooth(data = vizra %>%
filter(date == as.Date("2018-07-01") |
date == as.Date("2017-12-01")),
aes(x = date,
y = ra,
group = show,
color = show),
method = "lm",
linetype = "dashed",
size = 0.7
) +
geom_text_repel(data = vizra %>% filter(proj_flag == 1),
aes(x = date,
y = ra,
label = show,
color = show),
nudge_x = 45,
size = 3) +
geom_vline(xintercept = as.Date("2017-12-01"),
linetype = "dotted",
color = "gray") +
facet_wrap(~is_high, nrow = 2, scales = "free")+
coord_cartesian(xlim = c(as.Date("2017-03-01"),
as.Date("2018-09-01"))) +
scale_y_continuous(labels = scales::comma) +
my_theme +
theme(legend.position = "none")
ggsave("plot_ra.jpeg", device = "jpeg", width = 10, height = 10, dpi = 400)
ggplot(data = vizra %>% filter(proj_flag !=1),
aes(x = date,
y = ra)) +
labs(title = "WNYC Studios Shows. Progress Through Dec 2017 and FY18 Goal Comparison",
y = "Monthly Rolling Average") +
geom_point(aes(color = show),
size = 1) +
geom_point(data = vizra %>%
filter(proj_flag == 1),
aes(x = date,
y = ra,
color = show),
size = 1) +
geom_line(aes(group = show,
color = show)) +
stat_smooth(data = vizra %>%
filter(date == as.Date("2018-07-01") |
date == as.Date("2018-01-01")),
aes(x = date,
y = ra,
group = show,
color = show),
method = "lm",
linetype = "dashed",
size = 0.7
) +
geom_text_repel(data = vizra %>% filter(proj_flag == 1),
aes(x = date,
y = ra,
label = show,
color = show),
nudge_x = 45,
size = 3) +
geom_vline(xintercept = as.Date("2018-01-01"),
linetype = "dotted",
color = "gray") +
facet_wrap(~is_high, nrow = 2, scales = "free")+
coord_cartesian(xlim = c(as.Date("2017-03-01"),
as.Date("2018-09-01"))) +
scale_y_continuous(labels = scales::comma) +
my_theme +
theme(legend.position = "none")
ggsave("plot_ra.jpeg", device = "jpeg", width = 10, height = 10, dpi = 400)
ggsave("plot_ra_jan.jpeg", device = "jpeg", width = 10, height = 10, dpi = 400)
ggplot(data = vizra %>% filter(proj_flag !=1),
aes(x = date,
y = ra)) +
labs(title = "WNYC Studios Shows. Progress Through Jan 2018 and FY18 Goal Comparison",
y = "Monthly Rolling Average") +
geom_point(aes(color = show),
size = 1) +
geom_point(data = vizra %>%
filter(proj_flag == 1),
aes(x = date,
y = ra,
color = show),
size = 1) +
geom_line(aes(group = show,
color = show)) +
stat_smooth(data = vizra %>%
filter(date == as.Date("2018-07-01") |
date == as.Date("2018-01-01")),
aes(x = date,
y = ra,
group = show,
color = show),
method = "lm",
linetype = "dashed",
size = 0.7
) +
geom_text_repel(data = vizra %>% filter(proj_flag == 1),
aes(x = date,
y = ra,
label = show,
color = show),
nudge_x = 45,
size = 3) +
geom_vline(xintercept = as.Date("2018-01-01"),
linetype = "dotted",
color = "gray") +
facet_wrap(~is_high, nrow = 2, scales = "free")+
coord_cartesian(xlim = c(as.Date("2017-03-01"),
as.Date("2018-09-01"))) +
scale_y_continuous(labels = scales::comma) +
my_theme +
theme(legend.position = "none")
ggsave("plot_ra_jan.jpeg", device = "jpeg", width = 10, height = 10, dpi = 400)
i
ggsave("plot_ra_jan.jpeg", device = "jpeg", width = 10, height = 10, dpi = 400)
